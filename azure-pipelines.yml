trigger:
- main
 
jobs:
- job: 'LintAndTestCode'
 
  pool:
    vmImage: ubuntu-latest
 
  strategy:
    matrix:
      R2023a:
        MATLAB_RELEASE: 'R2023a'
 
  steps:
  - task: InstallMATLAB@0
    inputs:
      release: $(MATLAB_RELEASE)
    env:
      MATHWORKS_ACCOUNT: $(MATHWORKS_ACCOUNT)
      MATHWORKS_TOKEN: $(MATHWORKS_TOKEN)
 
 
 # This task lints all the code found in the workspace and fails the build if anything is found. Note this depends on the two functions sent to you in a prior email
  - task: RunMATLABCommand@0
    displayName: Lint the code
    inputs:
      command: issues = codeIssues(pwd),errorIdx = issues.Issues.Severity == "error";errors = issues.Issues(errorIdx,:); assert(isempty(errors), "Issues found in code " + newline + formattedDisplayText(groupsummary(issues.Issues,"Severity")))
    env:
      MATHWORKS_ACCOUNT: $(MATHWORKS_ACCOUNT)
      MATHWORKS_TOKEN: $(MATHWORKS_TOKEN)
 
  # This task Runs all the MATLAB and Simulink tests and generate variety of test artifacts. Check the documentation for all supported task parameters.
  - task: RunMATLABBuild@0
    env:
      MATHWORKS_ACCOUNT: $(MATHWORKS_ACCOUNT)
      MATHWORKS_TOKEN: $(MATHWORKS_TOKEN)
       
        # This task Runs all the MATLAB and Simulink tests and generate variety of test artifacts. Check the documentation for all supported task parameters.
  - task: RunMATLABCommand@0
    inputs:
      command: cd("models"), load_system("myf14"), disp("loaded f14")
    env:
      MATHWORKS_ACCOUNT: $(MATHWORKS_ACCOUNT)
      MATHWORKS_TOKEN: $(MATHWORKS_TOKEN)
